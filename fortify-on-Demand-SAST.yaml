################################################################################################################################################ 
# Fortify lets you build secure software fast with an appsec platform that automates testing throughout the DevSecOps pipeline. Fortify static,#
# dynamic, interactive, and runtime security testing is available on premises or as a service. To learn more about Fortify, start a free trial #
# or contact our sales team, visit microfocus.com/appsecurity.                                                                                 #
#                                                                                                                                              #
# Use this pipeline template as a basis for integrating Fortify ScanCentral into your GitLab pipelines to perform Static Application Security  #
# Testing (SAST). This template demonstrates the steps to prepare the code+dependencies and initiate a scan. Users should review inputs and    #
# environment variables below to configure scanning for an existing application in Fortify Software Security Center. Additional information is #
# available in the comments throughout the template and the Fortify ScanCentral product documentation.                                         #
################################################################################################################################################

fortify-sast-scancentral:
  image: fortifydocker/fortify-ci-tools:latest

  # Update/override variables based on the ScanCentral Client documentation for your project's included tech stack(s). Helpful hints:
  #   ScanCentral Client will download dependencies for maven (-bt mvn) and gradle (-bt gradle).
  #   The current fortify-ci-tools image is Linux only at this time. Msbuild integration is not currently supported.
  #   ScanCentral has additional options that should be set for PHP and Python projects.
  #   For other build tools (-bt none), add your build commands to download necessary dependencies.
  #   ScanCentral documentation is located at https://www.microfocus.com/documentation/fortify-software-security-center/ 
  variables:
   

  # Run Fortify ScanCentral Client. SSC_URL and SSC_TOKEN are expected as GitLab CICD Variables in the template (masking recommended).
  script:
    - touch /opt/Fortify/ScanCentral/Core/config/client.properties
    - echo "client_auth_token=secrets.CLIENT_KEY" > /opt/Fortify/ScanCentral/Core/config/client.properties
    - 'scancentral -sscurl secrets.SSC_URL -ssctoken secrets.SSC_TOKEN start secrets.SCANCENTRAL_BUILD_OPTS -pool secrets.POOL -upload -application secrets.SSC_APP -version secrets.SSC_PV -uptoken secrets.CI_TOKEN_SC' 
  
  allow_failure: true


